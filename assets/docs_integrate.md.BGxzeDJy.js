import{_ as i,c as s,o as a,a2 as e}from"./chunks/framework.BJ0zSiM-.js";const E=JSON.parse('{"title":"Integrating the NetGuard SDK","description":"","frontmatter":{},"headers":[],"relativePath":"docs/integrate.md","filePath":"docs/integrate.md"}'),n={name:"docs/integrate.md"},t=e(`<h1 id="integrating-the-netguard-sdk" tabindex="-1">Integrating the NetGuard SDK <a class="header-anchor" href="#integrating-the-netguard-sdk" aria-label="Permalink to &quot;Integrating the NetGuard SDK&quot;">​</a></h1><p>The NetGuard SDK supports common client operating systems. This page provides all integration methods.</p><ul><li>To save costs or avoid technical details, consider joining the <a href="./shared.html">Shared Defense Plan</a>.</li><li>If you want to <a href="./selfhosted.html">Set up Your Own NetGuard Server</a>, it&#39;s highly recommended to first understand <a href="./principle.html">How it works</a>.</li></ul><h2 id="download-the-sdk" tabindex="-1">Download the SDK <a class="header-anchor" href="#download-the-sdk" aria-label="Permalink to &quot;Download the SDK&quot;">​</a></h2><ul><li>Developers need to <a href="https://drive.google.com/drive/folders/15Y6rKEeYEIU9TE6OIgN-oOjfFxWr6pLG" target="_blank" rel="noreferrer">Click Here</a> to download the NetGuard SDK.</li><li>Before integration, obtain your unique AppID and AppKey from the <a href="http://user.udptcp.com" target="_blank" rel="noreferrer">Dashboard</a>.</li><li>Integrate the NetGuard SDK into <strong>Your Client App</strong> as needed.</li></ul><h2 id="integration-methods" tabindex="-1">Integration Methods <a class="header-anchor" href="#integration-methods" aria-label="Permalink to &quot;Integration Methods&quot;">​</a></h2><h3 id="microsoft-windows" tabindex="-1">Microsoft Windows <a class="header-anchor" href="#microsoft-windows" aria-label="Permalink to &quot;Microsoft Windows&quot;">​</a></h3><p>The Windows version of the NetGuard SDK includes <strong>Shield.exe</strong> and <strong>libshield.dll</strong>. The libshield.dll file exports a function named <strong>_Init</strong>, which follows the C calling convention (__cdecl). Developers can integrate using one of the following methods:</p><h4 id="zero-code" tabindex="-1">Zero-Code <a class="header-anchor" href="#zero-code" aria-label="Permalink to &quot;Zero-Code&quot;">​</a></h4><p>This method is suitable for developers with limited programming knowledge. Simply create a configuration file, place it along with Shield.exe and libshield.dll, and then run Shield.exe. The configuration file must be named Shield.ini and should contain the following:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Shield]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AppID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = DEVELOPEMENT_APP_ID</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; Replace DEVELOPEMENT_APP_ID with your own AppID</span></span></code></pre></div><h4 id="dynamic-library" tabindex="-1">Dynamic Library <a class="header-anchor" href="#dynamic-library" aria-label="Permalink to &quot;Dynamic Library&quot;">​</a></h4><p>This method is suitable for developers with a Windows programming background. If you want to ensure that the NetGuard is initialized successfully before running other business logic, this method is recommended. The following code demonstrates how to integrate the SDK in C/C++:</p><div class="language-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* It is recommended to load this dynamic library in a separate process.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Loading it directly into the App process might cause the App to crash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * or fail to connect to the server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1. Declare the function from the SDK</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extern</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    typedef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InitFunc)(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2. Load the dynamic library at the appropriate time and initialize it</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HMODULE hMod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LoadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libshield.dll&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hMod)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Failed to find libshield.dll</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InitFunc init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (InitFunc)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetProcAddress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hMod, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Init&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">init)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Failed to find Init function</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEVELOPEMENT_APP_ID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Replace with your own AppID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Initialization failed</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Execution continues here if initialization is successful</span></span></code></pre></div><h3 id="google-android" tabindex="-1">Google Android <a class="header-anchor" href="#google-android" aria-label="Permalink to &quot;Google Android&quot;">​</a></h3><p>The Android version of the NetGuard SDK comes as a single AAR file. Place this AAR file in the libs directory of your main app project (typically app/libs).</p><ol><li>Check and Add the Following to Your App-Level build.gradle</li></ol><div class="language-gradle vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">gradle</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>android {</span></span>
<span class="line"><span>    sourceSets.main {</span></span>
<span class="line"><span>        jniLibs.srcDirs = [&#39;libs&#39;]</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>dependencies {</span></span>
<span class="line"><span>    implementation files(&#39;libs/libshield.aar&#39;)</span></span>
<span class="line"><span>}</span></span></code></pre></div><ol start="2"><li>Initialize in the First Activity or Application Class</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// A return value of true indicates successful initialization</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bool bInit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Shield.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEVELOPEMENT_APP_ID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Replace with your own AppID</span></span></code></pre></div><h3 id="apple-ios-ipados" tabindex="-1">Apple iOS/iPadOS <a class="header-anchor" href="#apple-ios-ipados" aria-label="Permalink to &quot;Apple iOS/iPadOS&quot;">​</a></h3><p>The iOS version of the NetGuard SDK also supports iPadOS and includes the following two files:</p><ul><li>Header file: <strong>Shield.h</strong></li><li>Static library: <strong>libshield.a</strong></li></ul><p>The following code demonstrates how to load and initialize the NetGuard SDK in Objective-C:</p><div class="language-objective-c vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">objective-c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1. First, add libshield.a to your iOS project, otherwise, the build will fail.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 2. Include the header file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Shield.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3. Initialize at a appropriate time; a return value of true indicates success</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Shield </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Shield </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BOOL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bInit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [s </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Init:nil</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;DEVELOPEMENT_APP_ID&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Replace with your own AppID</span></span></code></pre></div><h2 id="obtain-the-client-s-real-ip-address" tabindex="-1">Obtain the Client&#39;s Real IP Address <a class="header-anchor" href="#obtain-the-client-s-real-ip-address" aria-label="Permalink to &quot;Obtain the Client&#39;s Real IP Address&quot;">​</a></h2><p>Under normal circumstances, the origin server can only obtain the IP address of the Persistence Server, not the client’s IP address.</p><p>Please <a href="https://drive.google.com/drive/folders/15Y6rKEeYEIU9TE6OIgN-oOjfFxWr6pLG" target="_blank" rel="noreferrer">Click Here</a> to download the appropriate IP plugin and install it on the origin server to obtain the client’s real IP address.</p><div class="tip custom-block"><p class="custom-block-title">Please Note</p><ul><li>If the origin server is running Windows, the App services must be restarted after installing the plugin.</li><li>If the origin server is running Linux, the plugin will take effect immediately after compilation and installation.</li><li>Only developers enrolled in the <a href="./shared.html">Shared Defense Plan</a> can obtain the client&#39;s real IP address.</li></ul></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li>Log in to the <a href="http://user.udptcp.com" target="_blank" rel="noreferrer">Dashboard</a> and <strong>correctly</strong> add forwarding rules as needed.</li><li>Update the existing code to connect to the local loopback IP address instead of the original TCP server.</li><li><strong>Mobile Apps</strong> use the loopback IP address 127.0.0.1, while <strong>PC devices</strong> need to obtain the loopback IP address from the <a href="http://user.udptcp.com" target="_blank" rel="noreferrer">Dashboard</a>.</li><li>If you encounter other issues after integrating the NetGuard SDK, please refer to <a href="./qa.html">Frequently Asked Questions</a>.</li></ul>`,31),l=[t];function h(r,p,o,d,k,c){return a(),s("div",null,l)}const u=i(n,[["render",h]]);export{E as __pageData,u as default};
